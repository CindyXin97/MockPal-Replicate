import type { Match } from '@/lib/store';

// ÁîüÊàêÂæÆ‰ø°Â•ΩÂèãÁî≥ËØ∑Ê®°ÊùøÔºà50Â≠óÁ¨¶‰ª•ÂÜÖÔºâ
export function generateWeChatFriendRequestTemplate(match: Match, currentUser: { username: string; jobType?: string; experienceLevel?: string }) {
  const practiceTypes = [];
  if (match.practicePreferences?.technicalInterview) practiceTypes.push('ÊäÄÊúØÈù¢');
  if (match.practicePreferences?.behavioralInterview) practiceTypes.push('Ë°å‰∏∫Èù¢');
  if (match.practicePreferences?.caseAnalysis) practiceTypes.push('Ê°à‰æãÂàÜÊûê');
  
  const practiceText = practiceTypes.length > 0 ? practiceTypes.join('„ÄÅ') : 'Ê®°ÊãüÈù¢ËØï';
  
  // ÁÆÄÊ¥ÅÁâàÊú¨ÔºåÈÄÇÂêàÂæÆ‰ø°Â•ΩÂèãÁî≥ËØ∑Ôºà50Â≠óÁ¨¶‰ª•ÂÜÖÔºâ
  return `MockPal ${practiceText}ÁªÉ‰π†‰ºô‰º¥Ôºå‰∏ÄËµ∑ËøõÊ≠•ÔºÅ`;
}

// ÁîüÊàêÂæÆ‰ø°ËÅîÁ≥ªÊ®°ÊùøÔºàËØ¶ÁªÜÁâàÊú¨ÔºåÁî®‰∫éËÅäÂ§©Ôºâ
export function generateWeChatTemplate(match: Match, currentUser: { username: string; jobType?: string; experienceLevel?: string }) {
  const practiceTypes = [];
  if (match.practicePreferences?.technicalInterview) practiceTypes.push('ÊäÄÊúØÈù¢');
  if (match.practicePreferences?.behavioralInterview) practiceTypes.push('Ë°å‰∏∫Èù¢');
  if (match.practicePreferences?.caseAnalysis) practiceTypes.push('Ê°à‰æãÂàÜÊûê');
  
  const practiceText = practiceTypes.length > 0 ? practiceTypes.join('„ÄÅ') : 'Ê®°ÊãüÈù¢ËØï';
  
  return `‰Ω†Â•ΩÔºÅÊàëÊòØ${currentUser.username}ÔºåÂú®MockPal‰∏äÁúãÂà∞‰Ω†ÁöÑËµÑÊñôÔºåÊÉ≥Âíå‰Ω†‰∏ÄËµ∑ÁªÉ‰π†${practiceText}„ÄÇ

ÊàëÁöÑËÉåÊôØÔºö
- Â≤ó‰ΩçÁ±ªÂûãÔºö${currentUser.jobType || 'Êú™ËÆæÁΩÆ'}
- ÁªèÈ™åÊ∞¥Âπ≥Ôºö${currentUser.experienceLevel || 'Êú™ËÆæÁΩÆ'}

ÁúãÂà∞‰Ω†ÁöÑÁõÆÊ†áÂÖ¨Âè∏ÊòØ${match.targetCompany || 'Êú™ËÆæÁΩÆ'}ÔºåÁõÆÊ†áË°å‰∏öÊòØ${match.targetIndustry || 'Êú™ËÆæÁΩÆ'}ÔºåÊàë‰ª¨ÊúâÂæàÂ§öÂÖ±ÂêåÁÇπÔºÅ

‰Ω†‰ªÄ‰πàÊó∂ÂÄôÊñπ‰æøËøõË°åÊ®°ÊãüÈù¢ËØïÁªÉ‰π†Âë¢ÔºüÂª∫ËÆÆ30-60ÂàÜÈíüÔºåÊàë‰ª¨ÂèØ‰ª•ËΩÆÊµÅÊâÆÊºîÈù¢ËØïÂÆòÂíåÂÄôÈÄâ‰∫∫„ÄÇ

ÊúüÂæÖÂíå‰Ω†‰∏ÄËµ∑ËøõÊ≠•ÔºÅüòä`;
}

// ÁîüÊàêLinkedInËÅîÁ≥ªÊ®°Êùø
export function generateLinkedInTemplate(match: Match, currentUser: { username: string; jobType?: string; experienceLevel?: string }) {
  const practiceTypes = [];
  if (match.practicePreferences?.technicalInterview) practiceTypes.push('technical interviews');
  if (match.practicePreferences?.behavioralInterview) practiceTypes.push('behavioral interviews');
  if (match.practicePreferences?.caseAnalysis) practiceTypes.push('case analysis');
  
  const practiceText = practiceTypes.length > 0 ? practiceTypes.join(', ') : 'mock interviews';
  
  // Convert Chinese job types and experience levels to English
  const jobTypeMap: { [key: string]: string } = {
    'DA': 'Data Analytics',
    'DS': 'Data Science', 
    'DE': 'Data Engineering',
    'BA': 'Business Analytics'
  };
  
  const experienceMap: { [key: string]: string } = {
    'ÂÆû‰π†': 'Intern',
    'Â∫îÂ±ä': 'New Graduate',
    '1-3Âπ¥': '1-3 years',
    '3-5Âπ¥': '3-5 years',
    '5Âπ¥‰ª•‰∏ä': '5+ years'
  };

  // Convert Chinese company names to English
  const companyMap: { [key: string]: string } = {
    'google': 'Google',
    'microsoft': 'Microsoft',
    'amazon': 'Amazon',
    'meta': 'Meta (Facebook)',
    'apple': 'Apple',
    'netflix': 'Netflix',
    'uber': 'Uber',
    'airbnb': 'Airbnb',
    'linkedin': 'LinkedIn',
    'twitter': 'Twitter',
    'salesforce': 'Salesforce',
    'oracle': 'Oracle',
    'ibm': 'IBM',
    'intel': 'Intel',
    'nvidia': 'NVIDIA',
    'amd': 'AMD',
    'cisco': 'Cisco',
    'adobe': 'Adobe',
    'spotify': 'Spotify',
    'slack': 'Slack',
    'zoom': 'Zoom',
    'palantir': 'Palantir',
    'databricks': 'Databricks',
    'snowflake': 'Snowflake',
    'mongodb': 'MongoDB',
    'elastic': 'Elastic',
    'splunk': 'Splunk',
    'tableau': 'Tableau',
    'alteryx': 'Alteryx',
    'other': 'Other'
  };

  // Convert Chinese industry names to English
  const industryMap: { [key: string]: string } = {
    'technology': 'Technology/Internet',
    'finance': 'Finance/Banking',
    'healthcare': 'Healthcare',
    'retail': 'Retail/E-commerce',
    'manufacturing': 'Manufacturing',
    'consulting': 'Consulting',
    'media': 'Media/Entertainment',
    'education': 'Education',
    'government': 'Government/Public Sector',
    'nonprofit': 'Non-profit',
    'energy': 'Energy',
    'transportation': 'Transportation',
    'real_estate': 'Real Estate',
    'insurance': 'Insurance',
    'telecommunications': 'Telecommunications',
    'automotive': 'Automotive',
    'aerospace': 'Aerospace',
    'pharmaceuticals': 'Pharmaceuticals',
    'biotechnology': 'Biotechnology',
    'other': 'Other'
  };
  
  const currentUserJobType = jobTypeMap[currentUser.jobType || ''] || currentUser.jobType || 'Not specified';
  const currentUserExperience = experienceMap[currentUser.experienceLevel || ''] || currentUser.experienceLevel || 'Not specified';
  const targetCompany = companyMap[match.targetCompany || ''] || match.targetCompany || 'Not specified';
  const targetIndustry = industryMap[match.targetIndustry || ''] || match.targetIndustry || 'Not specified';
  
  return `Hi ${match.username}! üëã

I'm ${currentUser.username}, and I found your profile on MockPal. I'd love to practice ${practiceText} together!

My background:
- Role: ${currentUserJobType}
- Experience: ${currentUserExperience}

I noticed you're targeting ${targetCompany} in the ${targetIndustry} industry - we seem to have similar goals!

Would you be interested in scheduling a 30-60 minute mock interview session? We can take turns being the interviewer and candidate.

Looking forward to connecting and helping each other grow! üöÄ

Best regards,
${currentUser.username}`;
}

// ÁîüÊàêÈÇÆÁÆ±ËÅîÁ≥ªÊ®°Êùø
export function generateEmailTemplate(match: Match, currentUser: { username: string; jobType?: string; experienceLevel?: string }) {
  const practiceTypes = [];
  if (match.practicePreferences?.technicalInterview) practiceTypes.push('technical interviews');
  if (match.practicePreferences?.behavioralInterview) practiceTypes.push('behavioral interviews');
  if (match.practicePreferences?.caseAnalysis) practiceTypes.push('case analysis');
  
  const practiceText = practiceTypes.length > 0 ? practiceTypes.join(', ') : 'mock interviews';
  
  // Convert Chinese job types and experience levels to English
  const jobTypeMap: { [key: string]: string } = {
    'DA': 'Data Analytics',
    'DS': 'Data Science', 
    'DE': 'Data Engineering',
    'BA': 'Business Analytics'
  };
  
  const experienceMap: { [key: string]: string } = {
    'ÂÆû‰π†': 'Intern',
    'Â∫îÂ±ä': 'New Graduate',
    '1-3Âπ¥': '1-3 years',
    '3-5Âπ¥': '3-5 years',
    '5Âπ¥‰ª•‰∏ä': '5+ years'
  };

  // Convert Chinese company names to English
  const companyMap: { [key: string]: string } = {
    'google': 'Google',
    'microsoft': 'Microsoft',
    'amazon': 'Amazon',
    'meta': 'Meta (Facebook)',
    'apple': 'Apple',
    'netflix': 'Netflix',
    'uber': 'Uber',
    'airbnb': 'Airbnb',
    'linkedin': 'LinkedIn',
    'twitter': 'Twitter',
    'salesforce': 'Salesforce',
    'oracle': 'Oracle',
    'ibm': 'IBM',
    'intel': 'Intel',
    'nvidia': 'NVIDIA',
    'amd': 'AMD',
    'cisco': 'Cisco',
    'adobe': 'Adobe',
    'spotify': 'Spotify',
    'slack': 'Slack',
    'zoom': 'Zoom',
    'palantir': 'Palantir',
    'databricks': 'Databricks',
    'snowflake': 'Snowflake',
    'mongodb': 'MongoDB',
    'elastic': 'Elastic',
    'splunk': 'Splunk',
    'tableau': 'Tableau',
    'alteryx': 'Alteryx',
    'other': 'Other'
  };

  // Convert Chinese industry names to English
  const industryMap: { [key: string]: string } = {
    'technology': 'Technology/Internet',
    'finance': 'Finance/Banking',
    'healthcare': 'Healthcare',
    'retail': 'Retail/E-commerce',
    'manufacturing': 'Manufacturing',
    'consulting': 'Consulting',
    'media': 'Media/Entertainment',
    'education': 'Education',
    'government': 'Government/Public Sector',
    'nonprofit': 'Non-profit',
    'energy': 'Energy',
    'transportation': 'Transportation',
    'real_estate': 'Real Estate',
    'insurance': 'Insurance',
    'telecommunications': 'Telecommunications',
    'automotive': 'Automotive',
    'aerospace': 'Aerospace',
    'pharmaceuticals': 'Pharmaceuticals',
    'biotechnology': 'Biotechnology',
    'other': 'Other'
  };
  
  const currentUserJobType = jobTypeMap[currentUser.jobType || ''] || currentUser.jobType || 'Not specified';
  const currentUserExperience = experienceMap[currentUser.experienceLevel || ''] || currentUser.experienceLevel || 'Not specified';
  const targetCompany = companyMap[match.targetCompany || ''] || match.targetCompany || 'Not specified';
  const targetIndustry = industryMap[match.targetIndustry || ''] || match.targetIndustry || 'Not specified';
  
  return `Subject: MockPal - Mock Interview Practice Request

Dear ${match.username},

I hope this email finds you well. My name is ${currentUser.username}, and I found your profile on MockPal. I'm reaching out because I believe we could be great practice partners for ${practiceText}.

About me:
- Current role: ${currentUserJobType}
- Experience level: ${currentUserExperience}

I noticed you're targeting ${targetCompany} in the ${targetIndustry} industry, which aligns well with my career goals.

I would love to schedule a 30-60 minute mock interview session where we can take turns being the interviewer and candidate. This would be mutually beneficial for both of us to improve our interview skills.

Please let me know your availability and preferred time slots. I'm flexible and can accommodate different time zones if needed.

Looking forward to hearing from you and potentially working together!

Best regards,
${currentUser.username}

---
Sent via MockPal - Connecting interview practice partners`;
}

// Â§çÂà∂ÊñáÊú¨Âà∞Ââ™Ë¥¥Êùø
export async function copyToClipboard(text: string): Promise<boolean> {
  try {
    if (navigator.clipboard && window.isSecureContext) {
      await navigator.clipboard.writeText(text);
      return true;
    } else {
      // ÈôçÁ∫ßÊñπÊ°à
      const textArea = document.createElement('textarea');
      textArea.value = text;
      textArea.style.position = 'fixed';
      textArea.style.left = '-999999px';
      textArea.style.top = '-999999px';
      document.body.appendChild(textArea);
      textArea.focus();
      textArea.select();
      const result = document.execCommand('copy');
      textArea.remove();
      return result;
    }
  } catch (error) {
    console.error('Failed to copy text:', error);
    return false;
  }
} 